{"version":3,"sources":["Context/ThemeContext.js","components/ErrorHandling/ErrorHandling.jsx","components/Header/Header.jsx","utils/initialCharacters.js","utils/favoritesReducer.js","components/FavoriteCharacters/FavoriteCharacters.jsx","components/Character/Character.jsx","components/Search/Search.jsx","components/Characters/Characters.jsx","containers/CharactersContainer/CharactersContainer.jsx","hooks/useCharacters.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","darkmode","setDarkmode","Provider","value","ErrorHandling","props","state","hasError","this","console","log","error","React","Component","Header","useContext","setDarkMode","className","type","onClick","initialCharacters","favoriteCharacters","favoritesReducer","action","some","favorite","id","payload","filter","FavoriteCharacters","favorites","map","src","image","alt","Character","character","handleClick","heart","setHeart","style","backgroundImage","name","status","species","location","origin","Search","handleSearch","search","onChange","placeholder","Characters","characters","CharactersContainer","url","setCharacters","useEffect","fetch","then","response","json","data","results","catch","Error","useCharacters","useReducer","dispatch","setSearch","filteredCharacters","useMemo","toLowerCase","includes","favoriteCharacter","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cd8a1a7.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\nconst ThemeContext = createContext(false);\n\nconst ThemeProvider = ({ children }) => {\n  const [darkmode, setDarkmode] = useState(false);\n\n  return (\n    <ThemeContext.Provider value={[darkmode, setDarkmode]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\n","import React from 'react';\n\nclass ErrorHandling extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    console.log(`${error}`);\n    return { hasError: true };\n  }\n\n  // componentDidCatch(error, errorInfo) {\n  //   this.setState({ hasError: true });\n  // }\n\n  render() {\n    if (this.state.hasError) {\n      console.log(`Error: ${this.state.hasError}`);\n      return <h1>Oops!! Something failed... please try again soon</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport { ErrorHandling };\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../../Context/ThemeContext';\n\nimport './Header.css';\n\nconst Header = () => {\n  const [darkmode, setDarkMode] = useContext(ThemeContext);\n\n  const handleClick = () => {\n    setDarkMode(!darkmode);\n  };\n\n  return (\n    <div className={darkmode ? 'Header dark' : 'Header light'}>\n      <h1>The Rick and Morty API</h1>\n      <button\n        type=\"button\"\n        onClick={handleClick}\n        className={darkmode ? 'Button dark' : 'Button light'}\n      >\n        {darkmode ? 'üåû' : 'üåô'}\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","const initialCharacters = {\n  favoriteCharacters: [],\n};\n\nexport { initialCharacters };\n","const favoritesReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_FAVORITES':\n      if (\n        !state.favoriteCharacters.some(\n          (favorite) => favorite.id === action.payload.id\n        )\n      ) {\n        return {\n          ...state,\n          favoriteCharacters: [...state.favoriteCharacters, action.payload],\n        };\n      }\n      return state;\n    case 'REMOVE_FROM_FAVORITES':\n      return {\n        ...state,\n        favoriteCharacters: state.favoriteCharacters.filter(\n          (favorite) => favorite.id !== action.payload.id\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport { favoritesReducer };\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../../Context/ThemeContext';\n\nimport './FavoriteCharacters.css';\n\nconst FavoriteCharacters = ({ favorites }) => {\n  const [darkmode] = useContext(ThemeContext);\n  return (\n    <>\n      <h2 className={darkmode ? 'Title dark' : 'Title'}>Favorites</h2>\n      <ul className={darkmode ? 'Favorites dark' : 'Favorites'}>\n        {favorites.map((favorite) => (\n          <li key={favorite.id} className=\"Favorites__avatar\">\n            <img\n              src={favorite.image}\n              className=\"Favorites__avatar--image\"\n              alt=\"Avatar of character\"\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport { FavoriteCharacters };\n","import React, { useState, useContext } from 'react';\nimport { ThemeContext } from '../../Context/ThemeContext';\n\nconst Character = ({ character, handleClick }) => {\n  const [darkmode] = useContext(ThemeContext);\n  const [heart, setHeart] = useState(false);\n\n  return (\n    <article\n      className={darkmode ? 'Character dark' : 'Character'}\n      key={character.id}\n    >\n      <div\n        className=\"Character__image\"\n        style={{ backgroundImage: `url(${character.image})` }}\n      />\n      <div className=\"Character__data\">\n        <h3 className=\"Character__data--name\">{character.name}</h3>\n        <p className=\"Character__data--meta\">\n          {character.status} - {character.species}\n        </p>\n        <p className=\"Character__data--subtitle\">Last known location:</p>\n        <p className=\"Character__data--value\">{character.location.name}</p>\n        <p className=\"Character__data--subtitle\">Origin:</p>\n        <p className=\"Character__data--value\">{character.origin.name}</p>\n        <button\n          className=\"Character__favButton\"\n          onClick={() => {\n            handleClick(character);\n            setHeart(!heart);\n          }}\n        >\n          {!heart ? 'ü§ç' : 'üß°'}\n        </button>\n      </div>\n    </article>\n  );\n};\n\nexport { Character };\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport './Search.css';\n\nconst Search = ({ handleSearch, search }) => {\n  const [darkmode] = useContext(ThemeContext);\n  return (\n    <div className={darkmode ? 'Search dark' : 'Search light'}>\n      <input\n        className={darkmode ? 'SearchInput dark' : 'SearchInput light'}\n        type=\"text\"\n        onChange={handleSearch}\n        value={search}\n        placeholder=\"Search a character\"\n      />\n    </div>\n  );\n};\n\nexport { Search };\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../../Context/ThemeContext';\nimport { Character } from '../Character/Character';\nimport { Search } from '../Search/Search';\nimport './Characters.css';\n\nconst Characters = ({ characters, handleClick, handleSearch, search }) => {\n  const [darkmode] = useContext(ThemeContext);\n\n  return (\n    <>\n      <h2 className={darkmode ? 'Title dark' : 'Title'}>List of characters</h2>\n      <Search handleSearch={handleSearch} search={search} />\n      <section className={darkmode ? 'Characters dark' : 'Characters'}>\n        {characters.map((character) => {\n          return (\n            <Character\n              key={character.id}\n              character={character}\n              handleClick={handleClick}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\nexport { Characters };\n","import React, { useState, useReducer, useMemo } from 'react';\nimport { initialCharacters } from '../../utils/initialCharacters';\nimport { favoritesReducer } from '../../utils/favoritesReducer';\nimport { FavoriteCharacters } from '../../components/FavoriteCharacters/FavoriteCharacters';\nimport { Characters } from '../../components/Characters/Characters';\nimport { useCharacters } from '../../hooks/useCharacters';\n\nconst CharactersContainer = () => {\n  const API = 'https://rickandmortyapi.com/api/character';\n  const characters = useCharacters(API);\n\n  const [state, dispatch] = useReducer(favoritesReducer, initialCharacters);\n  const handleClick = (favoriteCharacter) => {\n    if (\n      !state.favoriteCharacters.some(\n        (favorite) => favorite.id === favoriteCharacter.id\n      )\n    ) {\n      dispatch({ type: 'ADD_TO_FAVORITES', payload: favoriteCharacter });\n    } else {\n      dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: favoriteCharacter });\n    }\n  };\n\n  const [search, setSearch] = useState('');\n  const handleSearch = ({ target }) => {\n    setSearch(target.value);\n  };\n\n  const filteredCharacters = useMemo(() => {\n    if (search) {\n      return characters.filter((character) =>\n        character.name.toLowerCase().includes(search.toLowerCase())\n      );\n    } else {\n      return characters;\n    }\n  }, [characters, search]);\n\n  return (\n    <>\n      <FavoriteCharacters favorites={state.favoriteCharacters} />\n      <Characters\n        characters={filteredCharacters}\n        handleClick={handleClick}\n        handleSearch={handleSearch}\n        search={search}\n      />\n    </>\n  );\n};\n\nexport { CharactersContainer };\n","import { useState, useEffect } from 'react';\n\nconst useCharacters = (url) => {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setCharacters(data.results))\n      .catch((error) => {\n        throw new Error(`Couldn't get the data:${error}`);\n      });\n  }, [url]);\n  return characters;\n};\n\nexport { useCharacters };\n","import React from 'react';\nimport { ErrorHandling } from './components/ErrorHandling/ErrorHandling';\n\nimport Header from './components/Header/Header';\nimport { CharactersContainer } from './containers/CharactersContainer/CharactersContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ErrorHandling>\n        <Header />\n        <CharactersContainer />\n      </ErrorHandling>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from './Context/ThemeContext';\nimport App from './App';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}